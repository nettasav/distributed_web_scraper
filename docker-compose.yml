services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    # environment:
    #   - RABBITMQ_DEFAULT_USER=YOUR_USERNAME # guest
    #   - RABBITMQ_DEFAULT_PASS=YOUR_PASSWORD # guest
    ports:
      - "5672:5672" # for AMQP (Advanced Message Queuing Protocol) communication
      - "15672:15672" # for the RabbitMQ management interface
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 30s
      retries: 5

  mongo:
    image: mongo:8.0.1
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGODB_USERNAME: user
      MONGODB_PASSWORD: password
    volumes:
      - "./db:/data/db"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet
      interval: 15s
      timeout: 30s
      retries: 5
      start_period: 20s

  html_parser:
    build:
      context: ./html_parser
      dockerfile: Dockerfile
    volumes:
      - "./fs:/html_parser/fs"
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 4

  url_manager:
    build:
      context: ./url_manager
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 2
networks:
  default:
    driver: bridge
